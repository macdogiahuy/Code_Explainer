import Prism from 'prismjs';
import 'prismjs/components/prism-javascript';
import 'prismjs/components/prism-jsx';
import 'prismjs/components/prism-python';
import 'prismjs/components/prism-tsx';
import { useEffect, useMemo, useState } from 'react';
import Editor from 'react-simple-code-editor';
import './styles/prism-theme.css';
import SettingsModal from './components/SettingsModal/SettingsModal';

const languages = [
  { value: 'python', label: 'Python', prism: 'python' },
  { value: 'javascript', label: 'JavaScript', prism: 'javascript' },
  { value: 'jsx', label: 'React (JSX)', prism: 'jsx' },
];

const initialSnippets = {
  python: [
    'def factorial(n: int) -> int:',
    '    """Return n! using recursion."""',
    '    if n <= 1:',
    '        return 1',
    '    return n * factorial(n - 1)',
    '',
    '',
    'def explain_factorial(values: list[int]) -> dict[int, int]:',
    '    return {value: factorial(value) for value in values}',
  ].join('\n'),
  javascript: [
    'export const fetchUser = async (id) => {',
    '  const response = await fetch(`/api/users/${id}`)',
    '  if (!response.ok) {',
    "    throw new Error('Unable to load user')",
    '  }',
    '  const data = await response.json()',
    '  return {',
    '    id: data.id,',
    '    fullName: `${data.firstName} ${data.lastName}`,',
    '    teams: data.teams ?? [],',
    '  }',
    '}',
  ].join('\n'),
  jsx: [
    "import { useEffect, useState } from 'react'",
    '',
    'export function NotificationsBadge() {',
    '  const [unread, setUnread] = useState(0)',
    '',
    '  useEffect(() => {',
    '    const subscription = subscribeToNotifications(count => setUnread(count))',
    '    return () => subscription.unsubscribe()',
    '  }, [])',
    '',
    '  if (unread === 0) {',
    '    return <span className="badge">All caught up</span>',
    '  }',
    '',
    '  return <span className="badge badge--alert">{unread} pending alerts</span>',
    '}',
  ].join('\n'),
};

const knowledgeBase = {
  python: {
    summary:
      'ƒêo·∫°n script d√πng ƒë·ªá quy ƒë·ªÉ t√≠nh giai th·ª´a v√† d·ª±ng dict √°nh x·∫° gi√° tr·ªã v·ªõi k·∫øt qu·∫£.',
    insights: [
      'Ki·ªÉm tra ƒëi·ªÅu ki·ªán c∆° s·ªü n <= 1 ƒë·ªÉ tr√°nh ƒë·ªá quy v√¥ h·∫°n.',
      'S·ª≠ d·ª•ng dictionary comprehension gi√∫p tr·∫£ k·∫øt qu·∫£ g·ªçn v·ªõi nhi·ªÅu ƒë·∫ßu v√†o.',
      'Ki·ªÉu tr·∫£ v·ªÅ r√µ r√†ng h·ªó tr·ª£ vi·ªác linting v√† t√†i li·ªáu ho√°.',
    ],
  },
  javascript: {
    summary:
      'H√†m b·∫•t ƒë·ªìng b·ªô truy c·∫≠p API ng∆∞·ªùi d√πng, x·ª≠ l√Ω l·ªói v√† chu·∫©n ho√° d·ªØ li·ªáu tr·∫£ v·ªÅ.',
    insights: [
      'Lu√¥n ki·ªÉm tra response.ok tr∆∞·ªõc khi parse JSON ƒë·ªÉ tr√°nh l·ªói ng·∫ßm.',
      'S·ª≠ d·ª•ng to√°n t·ª≠ nullish coalescing (??) ƒë·ªÉ khai b√°o gi√° tr·ªã m·∫∑c ƒë·ªãnh.',
      'T√°ch logic ƒë·ªãnh d·∫°ng t√™n gi√∫p frontend t√°i s·ª≠ d·ª•ng d·ªÖ d√†ng.',
    ],
  },
  jsx: {
    summary:
      'Component React hi·ªÉn th·ªã huy hi·ªáu th√¥ng b√°o theo s·ªë l∆∞·ª£ng ch∆∞a ƒë·ªçc l·∫•y t·ª´ subscription.',
    insights: [
      'Cleanup trong useEffect b·∫£o ƒë·∫£m hu·ª∑ ƒëƒÉng k√Ω khi component unmount.',
      'ƒêi·ªÅu ki·ªán tr·∫£ v·ªÅ s·ªõm gi√∫p giao di·ªán r√µ r√†ng h∆°n.',
      'Class utility c√≥ th·ªÉ d√πng c√πng Tailwind ho·∫∑c CSS Modules tu·ª≥ d·ª± √°n.',
    ],
  },
};

const featureTiles = [
  {
    title: 'Gi·∫£i th√≠ch t·ªïng quan',
    caption:
      'T√≥m t·∫Øt logic ƒëo·∫°n code th√†nh ng√¥n ng·ªØ d·ªÖ hi·ªÉu ch·ªâ v·ªõi m·ªôt c√∫ nh·∫•p.',
    icon: 'üß†',
  },
  {
    title: 'Gi·∫£i th√≠ch t·ª´ng d√≤ng',
    caption:
      'Highlight t·ª´ng d√≤ng v√† gi·∫£i th√≠ch t√°c d·ª•ng gi√∫p ng∆∞·ªùi m·ªõi d·ªÖ theo k·ªãp.',
    icon: 'üîç',
  },
  {
    title: 'H·ªó tr·ª£ nhi·ªÅu ng√¥n ng·ªØ',
    caption: 'Chuy·ªÉn ƒë·ªïi nhanh gi·ªØa Python, JavaScript v√† React JSX.',
    icon: 'üåê',
  },
  {
    title: 'L∆∞u phi√™n l√†m vi·ªác',
    caption: 'ƒêƒÉng nh·∫≠p ƒë·ªÉ ƒë·ªìng b·ªô l·ªãch s·ª≠ gi·∫£i th√≠ch v√† chia s·∫ª v·ªõi mentor.',
    icon: 'üì¶',
  },
];

function App() {
  const [theme, setTheme] = useState(
    () => localStorage.getItem('theme') ?? 'dark',
  );
  const [language, setLanguage] = useState(languages[0].value);
  const [codeMap, setCodeMap] = useState(initialSnippets);
  const [authTab, setAuthTab] = useState('login');
  const [showSettings, setShowSettings] = useState(false);

  useEffect(() => {
    const root = document.documentElement;
    if (theme === 'dark') {
      root.classList.add('dark');
    } else {
      root.classList.remove('dark');
    }
    localStorage.setItem('theme', theme);
  }, [theme]);

  const currentLanguage =
    languages.find((item) => item.value === language) ?? languages[0];
  const activeCode = codeMap[language];

  const explanation = useMemo(() => {
    const lines = activeCode.split('\n');
    const details = lines.map((line, index) => {
      const content = line.trim();
      if (!content) {
        return `D√≤ng ${index + 1}: (tr·ªëng ƒë·ªÉ t·∫°o kho·∫£ng th·ªü cho ng∆∞·ªùi ƒë·ªçc)`;
      }
      if (content.startsWith('#') || content.startsWith('//')) {
        return `D√≤ng ${index + 1}: Ch√∫ th√≠ch ‚Äì ${content.replace(
          /^([#/\s]+)/,
          '',
        )}`;
      }
      return `D√≤ng ${index + 1}: ${content}`;
    });

    return {
      summary:
        knowledgeBase[language]?.summary ??
        'ƒêo·∫°n code ƒëang ch·ªù ƒë∆∞·ª£c AI gi·∫£i th√≠ch.',
      insights: knowledgeBase[language]?.insights ?? [],
      details,
    };
  }, [activeCode, language]);

  const highlightCode = (codeText) => {
    const grammar =
      Prism.languages[currentLanguage.prism] ?? Prism.languages.javascript;
    return Prism.highlight(codeText, grammar, currentLanguage.prism);
  };

  const handleLanguageChange = (value) => {
    setLanguage(value);
  };

  const handleCodeChange = (value) => {
    setCodeMap((prev) => ({
      ...prev,
      [language]: value,
    }));
  };

  const handleAuthSubmit = (event) => {
    event.preventDefault();
  };

  return (
    <div className="relative overflow-hidden">
      <div className="pointer-events-none absolute -top-32 right-1/2 h-80 w-80 translate-x-1/2 rounded-full bg-sky-400/30 blur-3xl dark:bg-sky-500/20" />
      <div className="pointer-events-none absolute top-1/3 left-0 h-96 w-96 -translate-x-1/2 rounded-full bg-emerald-400/20 blur-[120px] dark:bg-indigo-500/20" />

      <div className="relative z-10 mx-auto flex min-h-screen max-w-6xl flex-col px-5 pb-20 pt-10 sm:px-10">
        <nav className="flex items-center justify-between rounded-full border border-slate-200/60 bg-white/80 px-5 py-3 shadow-lg shadow-slate-200/30 backdrop-blur dark:border-slate-800/60 dark:bg-midnight-900/80 dark:shadow-black/50">
          <div className="flex items-center gap-3">
            <span className="flex h-10 w-10 items-center justify-center rounded-2xl bg-gradient-to-br from-sky-400 to-indigo-500 text-lg font-bold text-white shadow-glow">
              CE
            </span>
            <div>
              <p className="text-sm font-semibold uppercase tracking-[0.4em] text-slate-500 dark:text-slate-400">
                Code Explainer
              </p>
              <h1 className="text-base font-semibold text-slate-900 dark:text-white">
                AI Assistant for Junior Devs
              </h1>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="hidden items-center gap-3 text-sm font-medium text-slate-500 dark:text-slate-300 sm:flex">
              <button className="rounded-full px-4 py-1.5 transition hover:text-sky-500 dark:hover:text-sky-300">
                S·∫£n ph·∫©m
              </button>
              <button className="rounded-full px-4 py-1.5 transition hover:text-sky-500 dark:hover:text-sky-300">
                Gi√°
              </button>
              <button className="rounded-full px-4 py-1.5 transition hover:text-sky-500 dark:hover:text-sky-300">
                T√†i li·ªáu
              </button>
            </div>
            <button
              type="button"
              onClick={() =>
                setTheme((mode) => (mode === 'dark' ? 'light' : 'dark'))
              }
              className="flex h-10 w-10 items-center justify-center rounded-full border border-slate-200 bg-white transition hover:border-sky-400 hover:text-sky-500 dark:border-slate-700 dark:bg-midnight-800 dark:hover:border-slate-500 dark:hover:text-sky-300"
              aria-label="ƒê·ªïi theme"
            >
              {theme === 'dark' ? (
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                  className="h-5 w-5"
                >
                  <path d="M21 12.79A9 9 0 1 1 11.21 3a7 7 0 0 0 9.79 9.79z" />
                </svg>
              ) : (
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                  className="h-5 w-5"
                >
                  <path d="M12 18a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1zm0-14a1 1 0 0 1-1-1V1a1 1 0 1 1 2 0v2a1 1 0 0 1-1 1zm9 7a1 1 0 0 1 1 1 1 1 0 0 1-1 1h-2a1 1 0 0 1 0-2zm-14 1a1 1 0 0 1-1 1H1a1 1 0 1 1 0-2h2a1 1 0 0 1 1 1zm11.07 6.07a1 1 0 0 1 1.41 1.41l-1.42 1.42a1 1 0 0 1-1.41-1.41zM7.34 5.64A1 1 0 1 1 5.93 4.2l1.42-1.41A1 1 0 0 1 8.76 4.2zM5.64 18.36a1 1 0 1 1-1.41-1.41l1.42-1.42a1 1 0 0 1 1.41 1.41zM18.36 5.64a1 1 0 0 1-1.41-1.41l1.42-1.42a1 1 0 1 1 1.41 1.41z" />
                </svg>
              )}
            </button>
            <button className="hidden rounded-full border border-slate-200 px-4 py-2 text-sm font-semibold text-slate-700 transition hover:border-sky-400 hover:text-sky-500 dark:border-slate-700 dark:text-slate-200 dark:hover:border-slate-500 dark:hover:text-sky-300 sm:block">
              ƒêƒÉng nh·∫≠p
            </button>
            <button className="hidden rounded-full bg-gradient-to-r from-sky-400 via-indigo-500 to-purple-500 px-4 py-2 text-sm font-semibold text-white shadow-glow transition hover:brightness-110 sm:block">
              ƒêƒÉng k√Ω
            </button>
          </div>
        </nav>

        <header className="mt-16 grid gap-10 lg:grid-cols-[1.1fr_minmax(0,1fr)]">
          <div className="space-y-6">
            <span className="inline-flex items-center gap-2 rounded-full border border-slate-200/70 bg-white/70 px-4 py-2 text-xs font-semibold uppercase tracking-[0.35em] text-slate-500 backdrop-blur dark:border-slate-700/80 dark:bg-midnight-900/70 dark:text-slate-300">
              <span className="h-2 w-2 animate-pulse rounded-full bg-emerald-400" />
              AI Code Mentor
            </span>
            <h2 className="text-4xl font-bold leading-tight text-slate-900 dark:text-white sm:text-5xl">
              Hi·ªÉu code ph·ª©c t·∫°p, t·ª± tin g√≥p √Ω c√πng ƒë·ªôi ng≈© ch·ªâ trong v√†i gi√¢y.
            </h2>
            <p className="text-base text-slate-600 dark:text-slate-300 sm:text-lg">
              Code Explainer gi√∫p b·∫°n gi·∫£i th√≠ch b·∫•t k·ª≥ ƒëo·∫°n code n√†o b·∫±ng ti·∫øng
              Vi·ªát d·ªÖ hi·ªÉu. Ch·ªçn ng√¥n ng·ªØ, b·∫•m "Gi·∫£i th√≠ch" v√† nh·∫≠n ngay ph·∫ßn
              t·ªïng quan c√πng gi·∫£i th√≠ch t·ª´ng d√≤ng cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu.
            </p>
            <div className="flex flex-wrap gap-3">
              <button className="group relative inline-flex items-center gap-3 rounded-full bg-gradient-to-r from-sky-400 via-indigo-500 to-purple-500 px-6 py-3 text-sm font-semibold text-white shadow-glow transition hover:brightness-110">
                <span className="relative z-10">B·∫Øt ƒë·∫ßu gi·∫£i th√≠ch</span>
                <span className="relative z-10 flex h-6 w-6 items-center justify-center rounded-full bg-white/20 text-white">
                  ‚Üí
                </span>
                <span className="absolute inset-0 rounded-full opacity-0 transition group-hover:opacity-100">
                  <span className="absolute inset-0 animate-shimmer rounded-full bg-gradient-to-r from-transparent via-white/40 to-transparent" />
                </span>
              </button>
              <button className="inline-flex items-center gap-3 rounded-full border border-slate-200 px-6 py-3 text-sm font-semibold text-slate-700 transition hover:border-sky-400 hover:text-sky-500 dark:border-slate-700 dark:text-slate-200 dark:hover:border-slate-500 dark:hover:text-sky-300">
                Xem demo
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                  className="h-4 w-4"
                >
                  <path d="M5 3v18l15-9-15-9z" />
                </svg>
              </button>
            </div>
            <dl className="grid gap-6 sm:grid-cols-3">
              <div className="rounded-2xl border border-slate-200/80 bg-white/70 p-5 text-left shadow-lg shadow-slate-200/40 backdrop-blur dark:border-slate-700/70 dark:bg-midnight-900/70 dark:shadow-black/40">
                <dt className="text-xs uppercase tracking-[0.3em] text-slate-500 dark:text-slate-400">
                  Ng√¥n ng·ªØ
                </dt>
                <dd className="mt-3 text-3xl font-bold text-slate-900 dark:text-white">
                  20+
                </dd>
                <p className="mt-1 text-xs text-slate-500 dark:text-slate-400">
                  D·ª± ki·∫øn ph√°t tri·ªÉn th√™m TypeScript, Go, Java.
                </p>
              </div>
              <div className="rounded-2xl border border-slate-200/80 bg-white/70 p-5 text-left shadow-lg shadow-slate-200/40 backdrop-blur dark:border-slate-700/70 dark:bg-midnight-900/70 dark:shadow-black/40">
                <dt className="text-xs uppercase tracking-[0.3em] text-slate-500 dark:text-slate-400">
                  Th·ªùi gian
                </dt>
                <dd className="mt-3 text-3xl font-bold text-slate-900 dark:text-white">
                  5 gi√¢y
                </dd>
                <p className="mt-1 text-xs text-slate-500 dark:text-slate-400">
                  AI ph√¢n t√≠ch code v√† tr·∫£ l·ªùi g·∫ßn nh∆∞ t·ª©c th√¨.
                </p>
              </div>
              <div className="rounded-2xl border border-slate-200/80 bg-white/70 p-5 text-left shadow-lg shadow-slate-200/40 backdrop-blur dark:border-slate-700/70 dark:bg-midnight-900/70 dark:shadow-black/40">
                <dt className="text-xs uppercase tracking-[0.3em] text-slate-500 dark:text-slate-400">
                  H√†i l√≤ng
                </dt>
                <dd className="mt-3 text-3xl font-bold text-slate-900 dark:text-white">
                  98%
                </dd>
                <p className="mt-1 text-xs text-slate-500 dark:text-slate-400">
                  Kh·∫£o s√°t n·ªôi b·ªô t·ª´ h∆°n 600 l·∫≠p tr√¨nh vi√™n m·ªõi.
                </p>
              </div>
            </dl>
          </div>

          <div className="relative rounded-3xl border border-slate-200/60 bg-white/60 p-8 shadow-2xl shadow-slate-200/60 backdrop-blur dark:border-slate-800/80 dark:bg-midnight-900/60 dark:shadow-black/70">
            <div className="absolute inset-0 -z-10 rounded-3xl bg-gradient-to-br from-sky-400/10 via-transparent to-purple-500/10" />
            <div className="mb-6 flex items-center justify-between gap-4">
              <div className="flex items-center gap-3 text-sm">
                <span className="flex h-10 w-10 items-center justify-center rounded-2xl bg-gradient-to-br from-sky-400 to-indigo-500 text-white shadow-glow">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    strokeWidth="1.5"
                    className="h-5 w-5"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      d="M8 6h13M8 12h13M8 18h13M3 6h.01M3 12h.01M3 18h.01"
                    />
                  </svg>
                </span>
                <div>
                  <p className="text-xs uppercase tracking-[0.3em] text-slate-500 dark:text-slate-400">
                    Ch·ªçn ng√¥n ng·ªØ
                  </p>
                  <p className="text-sm font-semibold text-slate-900 dark:text-slate-100">
                    T·ª± ƒë·ªông highlight v√† format
                  </p>
                </div>
              </div>
              <div className="inline-flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-1 text-xs font-medium text-slate-600 shadow dark:border-slate-700 dark:bg-midnight-800 dark:text-slate-300">
                <span className="h-2 w-2 rounded-full bg-emerald-400" />
                ƒêang s·∫µn s√†ng
              </div>
            </div>

            <div className="mb-5 flex flex-wrap items-center gap-2">
              {languages.map((option) => (
                <button
                  key={option.value}
                  type="button"
                  onClick={() => handleLanguageChange(option.value)}
                  className={`rounded-full border px-4 py-2 text-sm font-semibold transition ${option.value === language
                    ? 'border-transparent bg-gradient-to-r from-sky-400 via-indigo-500 to-purple-500 text-white shadow-glow'
                    : 'border-slate-200/80 bg-white/50 text-slate-600 hover:border-sky-400 hover:text-sky-500 dark:border-slate-700/70 dark:bg-midnight-900/60 dark:text-slate-300 dark:hover:border-slate-500 dark:hover:text-sky-300'
                    }`}
                >
                  {option.label}
                </button>
              ))}
            </div>

            <div className="relative overflow-hidden rounded-2xl border border-slate-200 bg-slate-900/95 p-4 shadow-xl shadow-slate-900/50 dark:border-slate-700 dark:bg-slate-950/90">
              <div className="pointer-events-none absolute -top-24 right-10 h-48 w-48 rounded-full bg-sky-500/20 blur-3xl" />
              <Editor
                value={activeCode}
                onValueChange={handleCodeChange}
                highlight={highlightCode}
                padding={20}
                className="code-editor text-sm leading-relaxed"
                textareaId="code-input"
                aria-label="Code input"
              />
              <button className="mt-4 inline-flex items-center gap-2 rounded-full bg-gradient-to-r from-emerald-400 to-sky-500 px-5 py-2 text-xs font-semibold uppercase tracking-[0.3em] text-white shadow-lg shadow-emerald-400/40 transition hover:brightness-110">
                Gi·∫£i th√≠ch ngay
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  strokeWidth="1.5"
                  className="h-4 w-4"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M5 12h14M13 5l7 7-7 7"
                  />
                </svg>
              </button>
            </div>
          </div>
        </header>

        <section className="mt-16 grid gap-8 lg:grid-cols-[1fr_minmax(0,1.4fr)]">
          <div className="grid gap-6 sm:grid-cols-2">
            {featureTiles.map((tile) => (
              <article
                key={tile.title}
                className="group relative overflow-hidden rounded-3xl border border-slate-200/70 bg-white/70 p-6 shadow-lg shadow-slate-200/60 backdrop-blur transition hover:-translate-y-1 hover:border-sky-400 hover:shadow-glow dark:border-slate-700/80 dark:bg-midnight-900/70 dark:shadow-black/50"
              >
                <div className="absolute inset-0 opacity-0 transition group-hover:opacity-100">
                  <div className="absolute -top-20 right-10 h-40 w-40 rounded-full bg-sky-400/30 blur-3xl" />
                </div>
                <div className="relative flex h-12 w-12 items-center justify-center rounded-2xl bg-gradient-to-br from-sky-400 to-indigo-500 text-2xl shadow-glow">
                  <span>{tile.icon}</span>
                </div>
                <h3 className="mt-5 text-lg font-semibold text-slate-900 dark:text-white">
                  {tile.title}
                </h3>
                <p className="mt-2 text-sm text-slate-600 dark:text-slate-300">
                  {tile.caption}
                </p>
              </article>
            ))}
          </div>

          <div className="grid gap-6 lg:grid-cols-[minmax(0,1.2fr)_minmax(0,0.9fr)]">
            <article className="relative flex flex-col gap-4 overflow-hidden rounded-3xl border border-slate-200/70 bg-white/70 p-6 shadow-xl shadow-slate-200/60 backdrop-blur dark:border-slate-700/70 dark:bg-midnight-900/70 dark:shadow-black/60">
              <header className="flex items-center justify-between gap-4">
                <div>
                  <p className="text-xs uppercase tracking-[0.35em] text-slate-500 dark:text-slate-400">
                    T·ªïng quan
                  </p>
                  <h4 className="mt-1 text-lg font-semibold text-slate-900 dark:text-white">
                    Gi·∫£i th√≠ch chung
                  </h4>
                </div>
                <span className="rounded-full border border-emerald-400/40 bg-emerald-400/10 px-3 py-1 text-xs font-semibold text-emerald-500">
                  98% ch√≠nh x√°c
                </span>
              </header>
              <p className="text-sm text-slate-600 dark:text-slate-300">
                {explanation.summary}
              </p>
              <ul className="grid gap-3 text-sm text-slate-500 dark:text-slate-400">
                {explanation.insights.map((insight) => (
                  <li
                    key={insight}
                    className="flex items-start gap-2 rounded-2xl border border-slate-200/60 bg-white/80 px-4 py-3 shadow-sm shadow-slate-200/40 dark:border-slate-700/60 dark:bg-midnight-900/70 dark:text-slate-300"
                  >
                    <span className="mt-1 h-1.5 w-1.5 rounded-full bg-sky-400" />
                    <span>{insight}</span>
                  </li>
                ))}
              </ul>
            </article>

            <article className="flex flex-col gap-4 overflow-hidden rounded-3xl border border-slate-200/70 bg-white/70 p-6 shadow-xl shadow-slate-200/60 backdrop-blur dark:border-slate-700/70 dark:bg-midnight-900/70 dark:shadow-black/60">
              <header>
                <p className="text-xs uppercase tracking-[0.35em] text-slate-500 dark:text-slate-400">
                  Line-by-line
                </p>
                <h4 className="mt-2 text-lg font-semibold text-slate-900 dark:text-white">
                  Gi·∫£i th√≠ch t·ª´ng d√≤ng
                </h4>
              </header>
              <div
                className="space-y-3 overflow-y-auto pr-2 text-sm text-slate-600 dark:text-slate-300"
                style={{ maxHeight: '260px' }}
              >
                {explanation.details.map((line) => (
                  <p
                    key={line}
                    className="rounded-2xl border border-slate-200/60 bg-white/70 px-4 py-3 shadow-sm shadow-slate-200/30 dark:border-slate-700/60 dark:bg-midnight-900/60"
                  >
                    {line}
                  </p>
                ))}
              </div>
            </article>
          </div>
        </section>

        <section className="mt-16 grid gap-8 rounded-3xl border border-slate-200/60 bg-white/70 p-10 shadow-2xl shadow-slate-200/60 backdrop-blur dark:border-slate-700/70 dark:bg-midnight-900/70 dark:shadow-black/70 lg:grid-cols-[1.2fr_minmax(0,0.9fr)]">
          <div className="space-y-5">
            <p className="text-xs uppercase tracking-[0.35em] text-slate-500 dark:text-slate-400">
              C·ªông ƒë·ªìng
            </p>
            <h3 className="text-3xl font-bold text-slate-900 dark:text-white">
              ƒêƒÉng nh·∫≠p ƒë·ªÉ l∆∞u phi√™n b·∫£n gi·∫£i th√≠ch ∆∞a th√≠ch c·ªßa b·∫°n
            </h3>
            <p className="text-sm text-slate-600 dark:text-slate-300">
              Tr·∫£i nghi·ªám mi·ªÖn ph√≠ v·ªõi gi·ªõi h·∫°n 20 l·∫ßn gi·∫£i th√≠ch m·ªói ng√†y. N√¢ng
              c·∫•p l√™n t√†i kho·∫£n Pro ƒë·ªÉ m·ªü kho ki·∫øn th·ª©c, nh·∫≠n ƒë·ªÅ xu·∫•t c·∫£i ti·∫øn
              code v√† k·∫øt n·ªëi mentor theo gi·ªù.
            </p>
            <ul className="grid gap-3 text-sm text-slate-500 dark:text-slate-400">
              <li className="flex items-center gap-3">
                <span className="flex h-8 w-8 items-center justify-center rounded-full bg-emerald-400/20 text-emerald-500">
                  ‚úì
                </span>
                L∆∞u t·ª± ƒë·ªông m·ªçi phi√™n l√†m vi·ªác v√† ƒë·ªìng b·ªô tr√™n m·ªçi thi·∫øt b·ªã.
              </li>
              <li className="flex items-center gap-3">
                <span className="flex h-8 w-8 items-center justify-center rounded-full bg-sky-400/20 text-sky-500">
                  ‚úì
                </span>
                Theo d√µi ti·∫øn ƒë·ªô h·ªçc t·∫≠p qua dashboard tr·ª±c quan.
              </li>
              <li className="flex items-center gap-3">
                <span className="flex h-8 w-8 items-center justify-center rounded-full bg-purple-400/20 text-purple-500">
                  ‚úì
                </span>
                Nh·∫≠n g·ª£i √Ω snippet v√† test case g·ª£i √Ω theo ng·ªØ c·∫£nh.
              </li>
            </ul>
          </div>

          <form
            onSubmit={handleAuthSubmit}
            className="relative overflow-hidden rounded-3xl border border-slate-200/70 bg-white/80 p-7 shadow-xl shadow-slate-200/60 backdrop-blur dark:border-slate-700/70 dark:bg-midnight-900/80 dark:shadow-black/60"
          >
            <div className="absolute -top-24 right-6 h-40 w-40 rounded-full bg-purple-500/20 blur-3xl" />
            <div className="mb-6 inline-flex rounded-full border border-slate-200/70 bg-white/90 p-1 text-xs font-semibold text-slate-500 shadow-sm dark:border-slate-700/70 dark:bg-midnight-900/90 dark:text-slate-300">
              <button
                type="button"
                onClick={() => setAuthTab('login')}
                className={`rounded-full px-4 py-2 transition ${authTab === 'login'
                  ? 'bg-gradient-to-r from-sky-400 via-indigo-500 to-purple-500 text-white shadow-glow'
                  : 'hover:text-sky-500 dark:hover:text-sky-300'
                  }`}
              >
                ƒêƒÉng nh·∫≠p
              </button>
              <button
                type="button"
                onClick={() => setAuthTab('register')}
                className={`rounded-full px-4 py-2 transition ${authTab === 'register'
                  ? 'bg-gradient-to-r from-sky-400 via-indigo-500 to-purple-500 text-white shadow-glow'
                  : 'hover:text-sky-500 dark:hover:text-sky-300'
                  }`}
              >
                ƒêƒÉng k√Ω
              </button>
            </div>

            <div className="space-y-4">
              {authTab === 'register' && (
                <div className="text-sm">
                  <label
                    htmlFor="fullName"
                    className="mb-2 block font-semibold text-slate-600 dark:text-slate-200"
                  >
                    H·ªç v√† t√™n
                  </label>
                  <input
                    id="fullName"
                    name="fullName"
                    type="text"
                    autoComplete="name"
                    placeholder="V√≠ d·ª•: Nguy·ªÖn VƒÉn A"
                    className="w-full rounded-2xl border border-slate-200 bg-white px-4 py-3 text-slate-700 shadow-sm shadow-slate-200/40 transition focus:border-sky-400 focus:outline-none focus:ring-2 focus:ring-sky-200 dark:border-slate-700 dark:bg-midnight-800 dark:text-slate-100 dark:shadow-black/40 dark:focus:border-sky-400 dark:focus:ring-sky-500/40"
                  />
                </div>
              )}

              <div className="text-sm">
                <label
                  htmlFor="email"
                  className="mb-2 block font-semibold text-slate-600 dark:text-slate-200"
                >
                  Email
                </label>
                <input
                  id="email"
                  name="email"
                  type="email"
                  autoComplete="email"
                  placeholder="ban@congty.com"
                  className="w-full rounded-2xl border border-slate-200 bg-white px-4 py-3 text-slate-700 shadow-sm shadow-slate-200/40 transition focus:border-sky-400 focus:outline-none focus:ring-2 focus:ring-sky-200 dark:border-slate-700 dark:bg-midnight-800 dark:text-slate-100 dark:shadow-black/40 dark:focus:border-sky-400 dark:focus:ring-sky-500/40"
                />
              </div>

              <div className="text-sm">
                <label
                  htmlFor="password"
                  className="mb-2 block font-semibold text-slate-600 dark:text-slate-200"
                >
                  M·∫≠t kh·∫©u
                </label>
                <input
                  id="password"
                  name="password"
                  type="password"
                  autoComplete={
                    authTab === 'login' ? 'current-password' : 'new-password'
                  }
                  placeholder="T·ªëi thi·ªÉu 8 k√Ω t·ª±"
                  className="w-full rounded-2xl border border-slate-200 bg-white px-4 py-3 text-slate-700 shadow-sm shadow-slate-200/40 transition focus:border-sky-400 focus:outline-none focus:ring-2 focus:ring-sky-200 dark:border-slate-700 dark:bg-midnight-800 dark:text-slate-100 dark:shadow-black/40 dark:focus:border-sky-400 dark:focus:ring-sky-500/40"
                />
              </div>

              {authTab === 'login' && (
                <div className="flex items-center justify-between text-xs text-slate-500 dark:text-slate-400">
                  <label className="inline-flex items-center gap-2">
                    <input
                      type="checkbox"
                      className="h-4 w-4 rounded border border-slate-300 text-sky-500 focus:ring-sky-400 dark:border-slate-600 dark:bg-midnight-800"
                    />
                    Ghi nh·ªõ t√†i kho·∫£n
                  </label>
                  <button
                    type="button"
                    className="font-semibold text-sky-600 hover:underline dark:text-sky-400"
                  >
                    Qu√™n m·∫≠t kh·∫©u?
                  </button>
                </div>
              )}

              <button
                type="submit"
                className="w-full rounded-full bg-gradient-to-r from-sky-400 via-indigo-500 to-purple-500 px-6 py-3 text-sm font-semibold text-white shadow-glow transition hover:brightness-110"
              >
                {authTab === 'login' ? 'ƒêƒÉng nh·∫≠p' : 'T·∫°o t√†i kho·∫£n'}
              </button>

              <p className="text-center text-xs text-slate-500 dark:text-slate-400">
                Khi ti·∫øp t·ª•c, b·∫°n ƒë·ªìng √Ω v·ªõi{' '}
                <button
                  type="button"
                  className="font-semibold text-sky-600 hover:underline dark:text-sky-400"
                >
                  ƒêi·ªÅu kho·∫£n
                </button>{' '}
                v√†{' '}
                <button
                  type="button"
                  className="font-semibold text-sky-600 hover:underline dark:text-sky-400"
                >
                  Ch√≠nh s√°ch b·∫£o m·∫≠t
                </button>
                .
              </p>
            </div>
          </form>
        </section>

        {/* N√∫t m·ªü modal Settings */}
        <div className="fixed bottom-8 right-8 z-50">
          <button
            onClick={() => setShowSettings(true)}
            className="flex items-center gap-2 rounded-full bg-gradient-to-r from-sky-400 via-indigo-500 to-purple-500 px-5 py-3 text-sm font-semibold text-white shadow-glow transition hover:brightness-110"
          >
            ‚öôÔ∏è Settings
          </button>
        </div>

        {/* Hi·ªÉn th·ªã modal n·∫øu b·∫≠t */}
        {showSettings && (
          <SettingsModal onClose={() => setShowSettings(false)} />
        )}

        <footer className="mt-20 flex flex-col items-center gap-4 pb-10 text-xs text-slate-500 sm:flex-row sm:justify-between dark:text-slate-400">
          <p>
            ¬© {new Date().getFullYear()} Code Explainer. Made with ‚ù§Ô∏è t·∫°i Vi·ªát
            Nam.
          </p>
          <div className="flex items-center gap-4">
            <button className="hover:text-sky-500 dark:hover:text-sky-300">
              H∆∞·ªõng d·∫´n
            </button>
            <button className="hover:text-sky-500 dark:hover:text-sky-300">
              Blog
            </button>
            <button className="hover:text-sky-500 dark:hover:text-sky-300">
              H·ªó tr·ª£
            </button>
          </div>
        </footer>
      </div>
    </div>
  );
}

export default App;
